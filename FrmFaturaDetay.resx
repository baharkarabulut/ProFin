<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnYazdir.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <data name="btnPdfAktar.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>